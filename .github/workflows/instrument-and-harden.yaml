name: instrument-and-harden-image

# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows: ["build-image"]
    types:
      - completed

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Curl and build Slim SaaS CLI
        shell: bash
        run: |
          curl https://platform.zero.dev.saas.getslim.ai/.service/releases/slim/0.0.7-dev | sh
          ~/.slim/bin/slim config gen --save --token ${{ secrets.SLIM_TOKEN }}
      -
        name: Instrument the image
        shell: bash
        run: |
          ~/.slim/bin/slim --debug instrument \
          --stop-grace-period 999s  \
          ghcr.io/mritunjaysharma394/node-app:latest
      -
        name: Run the Initial Image
        shell: bash
        run: |
          docker run -d --rm \
          --user root \
          --cap-add ALL \
          -p 8080:8080 \
          --name app-instrumented ghcr.io/mritunjaysharma394/node-app:latest-slim-instrumented 
          sleep 5s    
          curl -v localhost:8080 
      # -
      #   name: Probe the container
      #   shell: bash
      #   run: |
      #     curl localhost:8080
      -
        name: Stop the instrumented container
        shell: bash
        run: |
          docker stop -t 999 app-instrumented
      -
        name: Harden the instrumented container
        shell: bash
        run: |
          NX_ID=$(docker inspect --format '{{ index .Config.Labels "slim.nx"}}' ghcr.io/mritunjaysharma394/node-app:latest-slim-instrumented)
          ~/.slim/bin/slim harden --id $NX_ID
      -
        name: Test the Hardened Image
        shell: bash
        run: |
          docker run -d --rm \
          --user root \
          --cap-add ALL \
          -p 8081:8080 \
          --name app-hardened ghcr.io/mritunjaysharma394/node-app:latest-slim-hardened
          sleep 5s
      -
        name: Probe the hardened container
        shell: bash
        run: |
          curl localhost:8081
      -
        name: Stop the hardened container
        shell: bash
        run: |
          docker stop app-hardened